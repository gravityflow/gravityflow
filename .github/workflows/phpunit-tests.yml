name: PHPUnit Tests

on:
  push:
    branches:
      - master
      - '*.*'
  pull_request:
    branches:
      - master
      - '*.*'

jobs:
  # Sets up WordPress for testing or development use.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Logs debug information about the runner container.
  # - Builds WordPress to run from the `build` directory.
  # - Creates a ZIP file of compiled WordPress
  # - Uploads ZIP file as an artifact.
  unit-tests:
    name: PHPUnit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php_versions: [  '7.4' ]
    steps:
      - name: Setup Database
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          host port: 3800
          container port: 3307
          mysql database: 'wordpress_unit_tests'
          mysql root password: 'root'

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_versions }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, gd, exif, iconv, imagick
          coverage: none
          tools: phpunit

      - name: Install PHPUnit
        run: |
          # Install the specified version of PHPUnit depending on the PHP version:
          echo "Install PHPUnit"
          case ${{ matrix.php_versions }} in
            7.3|7.4|7.0|5.6|5.5|5.4|nightly)
              # Use composer to install a compatible version of phpunit
              composer global require "phpunit/phpunit:>4.0 <6 || ^7.0"
              ;;
            7.2)
              echo "Using PHPUnit 6.0"
              composer global require "phpunit/phpunit=6.0.*"
              ;;
            7.1)
              echo "Using PHPUnit 5.7"
              composer global require "phpunit/phpunit=5.7.*"
              ;;
            *)
              echo "No PHPUnit version handling for PHP version ${{ matrix.php_versions }}"
              exit 1
              ;;
          esac

      - name: Clone Gravity Forms and install the tests
        env:
          GHTOKEN: ${{ secrets.GHTOKEN }}
        run: |
          curl --version
          git --version
          svn --version
          git clone https://"$GHTOKEN"@github.com/gravityforms/gravityforms.git $PWD/tmp/gravityforms
          bash tests/bin/install.sh wordpress_unit_tests root root 127.0.0.1:3800
      - name: Run tests
        run: |
          # Export Composer's global bin dir to PATH:
          composer config --list --global
          export PATH=`composer config --list --global | grep '\[home\]' | { read a; echo "${a#* }/vendor/bin:$PATH"; }`
          phpunit