/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkgravityflow"] = self["webpackChunkgravityflow"] || []).push([["common-inbox"],{

/***/ "./src/js/common/components/inbox.js":
/*!*******************************************************!*\
  !*** ./src/js/common/components/inbox.js + 8 modules ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ inbox; }\n});\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(\"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(\"./node_modules/@babel/runtime/helpers/esm/extends.js\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(\"./node_modules/@babel/runtime/regenerator/index.js\");\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./node_modules/ag-grid-community/dist/ag-grid-community.cjs.js\nvar ag_grid_community_cjs = __webpack_require__(\"./node_modules/ag-grid-community/dist/ag-grid-community.cjs.js\");\n// EXTERNAL MODULE: ./node_modules/delegate/src/delegate.js\nvar delegate = __webpack_require__(\"./node_modules/delegate/src/delegate.js\");\nvar delegate_default = /*#__PURE__*/__webpack_require__.n(delegate);\n// EXTERNAL MODULE: external \"gflow_config\"\nvar external_gflow_config_ = __webpack_require__(\"gflow-config\");\nvar external_gflow_config_default = /*#__PURE__*/__webpack_require__.n(external_gflow_config_);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(\"./node_modules/@babel/runtime/helpers/esm/classCallCheck.js\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(\"./node_modules/@babel/runtime/helpers/esm/createClass.js\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(\"./node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n;// CONCATENATED MODULE: ./src/js/templates/components/flyout.js\n/**\n * @function settingToggle\n * @description The gear icon for an ag grid instance that will trigger the settings flyout\n */\nvar flyoutContainer = function flyoutContainer() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var closeButtonClasses = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var content = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var description = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var direction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var position = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '';\n  var title = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';\n  var wrapperClasses = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : '';\n  return \"\\n\\t<article id=\\\"\".concat(id, \"\\\" class=\\\"\").concat(wrapperClasses, \" gform-flyout--\").concat(direction, \" gform-flyout--\").concat(position, \"\\\">\\n\\t\\t<button \\n\\t\\t\\tclass=\\\"\").concat(closeButtonClasses, \" gform-button gform-button--secondary gform-button--circular gform-button--size-xs\\\"\\n\\t\\t\\tdata-js=\\\"gform-flyout-close\\\" \\n\\t\\t\\ttitle=\\\"Close this flyout\\\"\\n\\t\\t>\\n\\t\\t\\t<i class=\\\"gform-button__icon gflow-icon gflow-icon--delete\\\"></i>\\n\\t\\t</button>\\n\\t\\t\").concat(title || description ? '<header class=\"gform-flyout__head\">' : '', \"\\n\\t\\t\").concat(title ? \"<div class=\\\"gform-flyout__title\\\">\".concat(title, \"</div>\") : '', \"\\n\\t\\t\").concat(description ? \"<div class=\\\"gform-flyout__desc\\\">\".concat(description, \"</div>\") : '', \"\\n\\t\\t\").concat(title || description ? '</header>' : '', \"\\n\\t\\t<div class=\\\"gform-flyout__body\\\">\").concat(content, \"</div>\\n\\t</article>\\n\\t\");\n}; // todo: needs i18n\n// EXTERNAL MODULE: ./src/js/utils/tools.js\nvar tools = __webpack_require__(\"./src/js/utils/tools.js\");\n;// CONCATENATED MODULE: ./src/js/utils/a11y/focus-loop.js\n\n/**\n * @function focusLoop\n * @description Loop through focusable els inside a container. Bound to a keydown listener usually.\n *\n * @param {KeyboardEvent} e\n * @param {HTMLElement} trigger\n * @param {HTMLElement} container\n * @param {Function} onEscape\n */\n\nfunction focusLoop() {\n  var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var trigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var container = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var onEscape = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n\n  if (!container || !trigger) {\n    console.error('You need to pass a container and trigger node to focusLoop.');\n    return;\n  } // esc key, refocus the settings trigger in the editor preview for the active field\n\n\n  if (e.keyCode === 27) {\n    trigger.focus();\n    onEscape();\n    return;\n  } // not tab key, exit\n\n\n  if (e.keyCode !== 9) {\n    return;\n  } // get visible focusable items\n\n\n  var focusable = tools.getFocusable(container); // store first and last visible item\n\n  var firstFocusableEl = focusable[0];\n  var lastFocusableEl = focusable[focusable.length - 1]; // shiftkey was involved, we're going backwards, focus last el if we are leaving first\n\n  if (e.shiftKey) {\n    /* shift + tab */\n    if (document.activeElement === firstFocusableEl) {\n      lastFocusableEl.focus();\n      e.preventDefault();\n    } // regular tabbing direction, bring us back to first el at reaching end\n\n  }\n  /* tab */\n  else if (document.activeElement === lastFocusableEl) {\n      firstFocusableEl.focus();\n      e.preventDefault();\n    }\n}\n;// CONCATENATED MODULE: ./src/js/utils/data/unique-id.js\n/**\n * @function uniqueId\n * @description Generate a unique id\n *\n * @param {string} prefix\n * @return {string}\n */\nfunction uniqueId() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'id';\n  return \"\".concat(prefix, \"-\").concat(Math.random().toString(36).substr(2, 9));\n}\n;// CONCATENATED MODULE: ./src/js/common/components/flyout.js\n\n\n\n\n\n\n\n\n\nvar Flyout = /*#__PURE__*/function () {\n  /**\n   * @param {Object} options\n   */\n  function Flyout() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    (0,classCallCheck.default)(this, Flyout);\n\n    (0,defineProperty.default)(this, \"closeFlyout\", function () {\n      if (!_this.flyoutElement.classList.contains('anim-in-active')) {\n        return;\n      }\n\n      _this.flyoutElement.classList.remove('anim-in-ready');\n\n      _this.flyoutElement.classList.remove('anim-in-active');\n\n      _this.flyoutElement.classList.add('anim-out-ready');\n\n      window.setTimeout(function () {\n        _this.flyoutElement.classList.add('anim-out-active');\n      }, 25);\n      window.setTimeout(function () {\n        _this.flyoutElement.classList.remove('anim-out-ready');\n\n        _this.flyoutElement.classList.remove('anim-out-active');\n      }, _this.animationDelay);\n      _this.state.open = false;\n    });\n\n    (0,defineProperty.default)(this, \"maybeCloseFlyout\", function (e) {\n      var _e$detail;\n\n      if (((_e$detail = e.detail) === null || _e$detail === void 0 ? void 0 : _e$detail.activeId) === _this.id) {\n        return;\n      }\n\n      _this.flyoutElement.classList.remove('anim-in-ready');\n\n      _this.flyoutElement.classList.remove('anim-in-active');\n\n      _this.flyoutElement.classList.remove('anim-out-ready');\n\n      _this.flyoutElement.classList.remove('anim-out-active');\n\n      _this.state.open = false;\n    });\n\n    (0,defineProperty.default)(this, \"handleKeyEvents\", function (e) {\n      return focusLoop(e, _this.triggerElement, _this.flyoutElement, _this.closeFlyout);\n    });\n\n    (0,defineProperty.default)(this, \"handleTriggerClick\", function (e) {\n      _this.triggerElement = e.target;\n\n      if (_this.state.open) {\n        _this.closeFlyout();\n\n        _this.triggerElement.focus();\n\n        _this.state.open = false;\n      } else {\n        _this.showFlyout();\n\n        _this.closeElement.focus();\n\n        _this.state.open = true;\n      }\n    });\n\n    (0,esm_extends.default)(this, {\n      animationDelay: 215,\n      // total runtime of close animation. must be synced with css\n      closeButtonClasses: 'gform-flyout__close',\n      // classes for the close button\n      content: '',\n      // the html content\n      description: '',\n      // the optional description for the flyout\n      direction: 'right',\n      // direction to fly in from, left or right\n      id: uniqueId('flyout'),\n      // id for the flyout\n      insertPosition: 'beforeend',\n      // insert position relative to target\n      lockBody: false,\n      // whether to lock body scroll when open\n      onClose: function onClose() {},\n      // function to fire when closed\n      onOpen: function onOpen() {},\n      // function to fire when opened\n      position: 'fixed',\n      // fixed or absolute positioning\n      renderOnInit: true,\n      // render on initialization?\n      target: 'body',\n      // the selector to append the flyout to\n      title: '',\n      // the optional title for the flyout\n      triggers: '[data-js=\"gform-trigger-flyout\"]',\n      // the selector[s] of the trigger that shows it\n      wrapperClasses: 'gform-flyout' // additional classes for the wrapper\n\n    }, options);\n\n    this.state = {\n      open: false\n    };\n    this.flyoutElement = null;\n    this.triggerElement = null;\n    this.closeElement = null;\n\n    if (this.renderOnInit) {\n      this.init();\n    }\n  }\n\n  (0,createClass.default)(Flyout, [{\n    key: \"showFlyout\",\n    value: function showFlyout() {\n      var _this2 = this;\n\n      this.flyoutElement.classList.add('anim-in-ready');\n      window.setTimeout(function () {\n        _this2.flyoutElement.classList.add('anim-in-active');\n      }, 25);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var target = document.querySelectorAll(this.target)[0];\n\n      if (!target) {\n        console.error(\"Flyout could not render as \".concat(this.target, \" could not be found.\"));\n        return;\n      }\n\n      target.insertAdjacentHTML(this.insertPosition, flyoutContainer(this.id, this.closeButtonClasses, this.content, this.description, this.direction, this.position, this.title, this.wrapperClasses));\n      this.flyoutElement = document.getElementById(this.id);\n      this.closeElement = tools.getNodes('gform-flyout-close', false, this.flyoutElement)[0];\n      console.info(\"Gravity Flow Common: Initialized flyout component on \".concat(this.target, \".\"));\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      var _this3 = this;\n\n      this.flyoutElement.addEventListener('keydown', this.handleKeyEvents);\n      this.closeElement.addEventListener('click', this.closeFlyout);\n      tools.getNodes(this.triggers, true, document, true).forEach(function (trigger) {\n        return trigger.addEventListener('click', _this3.handleTriggerClick);\n      });\n      document.addEventListener('gform/close-flyouts', this.maybeCloseFlyout);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.render();\n      this.bindEvents();\n    }\n  }]);\n\n  return Flyout;\n}();\n\n\n;// CONCATENATED MODULE: ./src/js/templates/components/grid.js\n/**\n * @function settingToggle\n * @description The gear icon for an ag grid instance that will trigger the settings flyout\n */\nvar settingToggle = function settingToggle() {\n  var triggerId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'grid-settings';\n  var title = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"\\n\\t<button \\n\\t\\tclass=\\\"gflow-grid__button gflow-grid__button--settings gflow-icon gflow-icon--cog\\\" \\n\\t\\tdata-js=\\\"\".concat(triggerId, \"\\\" \\n\\t\\ttitle=\\\"\").concat(title, \"\\\"\\n\\t></button>\\n\\t\");\n};\n;// CONCATENATED MODULE: ./src/js/templates/components/input.js\n/**\n * Input template\n *\n * @param {string} type\n * @param {string} id\n * @param {string} name\n * @param {string} value\n * @param {string} classes\n * @param {string} jsAttribute\n *\n * @return {string}\n */\n/* harmony default export */ function input() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'text';\n  var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var value = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var classes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'gform-input';\n  var jsAttribute = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'gform-input';\n  return \"\\n\\t<input \\n\\t\\tclass=\\\"\".concat(classes, \"\\\" \\n\\t\\tvalue=\\\"\").concat(value, \"\\\" \\n\\t\\ttype=\\\"\").concat(type, \"\\\" \\n\\t\\tdata-js=\\\"\").concat(jsAttribute, \"\\\"\\n\\t\\t\").concat(id ? \"id=\".concat(id) : '', \"\\n\\t\\t\").concat(name ? \"name=\".concat(name) : '', \"\\n\\t/>\\n\\t\");\n}\n;// CONCATENATED MODULE: ./src/js/templates/components/toggle.js\n/**\n * Toggle template\n *\n * @param {string} id\n * @param {string} name\n * @param {boolean} checked\n * @param {string} disabledLabel\n * @param {string} enabledLabel\n * @param {string} wrapperClasses\n * @param {string} jsAttribute\n *\n * @return {string}\n */\n/* harmony default export */ function toggle() {\n  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var checked = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var disabledLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  var enabledLabel = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  var wrapperClasses = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'gform-field__toggle';\n  var jsAttribute = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'gform-toggle';\n  return \"\\n\\t<div class=\\\"\".concat(wrapperClasses, \"\\\">\\n\\t\\t<span class=\\\"gform-settings-input__container\\\">\\n\\t\\t\\t<input \\n\\t\\t\\t\\ttype=\\\"checkbox\\\" \\n\\t\\t\\t\\tclass=\\\"gform-field__toggle-input\\\" \\n\\t\\t\\t\\tdata-js=\\\"\").concat(jsAttribute, \"\\\" \\n\\t\\t\\t\\t\").concat(id ? \"id=\".concat(id) : '', \"\\n\\t\\t\\t\\t\").concat(name ? \"name=\".concat(name) : '', \"\\n\\t\\t\\t\\t\").concat(checked ? 'checked' : '', \"\\n\\t\\t\\t>\\n\\t\\t\\t<label class=\\\"gform-field__toggle-container\\\" \").concat(id ? \"for=\".concat(id) : '', \">\\n\\t\\t\\t\\t<span \\n\\t\\t\\t\\t\\tclass=\\\"gform-field__toggle-switch-text screen-reader-text\\\"\\n\\t\\t\\t\\t\\tdata-disabled-text=\\\"\").concat(disabledLabel, \"\\\"\\n\\t\\t\\t\\t\\tdata-enabled-text=\\\"\").concat(enabledLabel, \"\\\"\\n\\t\\t\\t\\t>\").concat(checked ? enabledLabel : disabledLabel, \"</span>\\n\\t\\t\\t\\t<span class=\\\"gform-field__toggle-switch\\\"></span>\\n\\t\\t\\t</label>\\n\\t\\t</span>\\n\\t</div>\\n\\t\");\n}\n;// CONCATENATED MODULE: ./src/js/templates/components/inbox.js\n\n\n/**\n * @function settings\n * @description The content for the inbox settings flyout\n */\n\nvar settings = function settings() {\n  return \"\\n\\t<span class=\\\"gform-flyout__setting-label\\\">\\n\\t\\tEnable Live Refresh\\n\\t</span>\\n\\t<span class=\\\"gform-flyout__setting-desc\\\">\\n\\t\\tThis setting enables checking the server for new inbox entries on a configurable frequency.\\n\\t</span>\\n\\t\".concat(toggle('inbox-setting-polling-enabled', 'inbox-setting-polling-enabled', true, 'disabled', 'enabled', 'gform-field__toggle gform-flyout__setting', 'inbox-setting'), \"\\n\\t\\n\\t<label class=\\\"gform-flyout__setting-label\\\" for=\\\"gform-inbox-setting-polling-frequency\\\">\\n\\t\\tRefresh Frequency\\n\\t</label>\\n\\t<span class=\\\"gform-flyout__setting-desc\\\">\\n\\t\\tControl the frequency with which the server is checked for new inbox entries. Value is in seconds.\\n\\t</span>\\n\\t\").concat(input('number', 'inbox-setting-polling-frequency', 'inbox-setting-polling-frequency', '60', 'gform-input gform-flyout__setting gform-flyout__setting--poll-freq', 'inbox-setting'), \"\\n\\t\\n\\t<span class=\\\"gform-flyout__setting-label\\\">\\n\\t\\tEnable Push Notifications\\n\\t</span>\\n\\t<span class=\\\"gform-flyout__setting-desc\\\">\\n\\t\\tYou will have to allow push notifications for this domain and browser to enable this feature. If you haven't already,\\n\\t\\tyour browser will ask you to enable them one time.\\n\\t</span>\\n\\t\").concat(toggle('inbox-setting-push-notifications', 'inbox-setting-push-notifications', false, 'disabled', 'enabled', 'gform-field__toggle gform-flyout__setting', 'inbox-setting'), \"\\n\\t\");\n};\n;// CONCATENATED MODULE: ./src/js/common/components/inbox.js\n\n\n\n\n/**\n * Inbox\n *\n * Initializes the inbox component\n */\n\n\n\n\n\n\nvar el = {};\nvar instances = {};\nvar options = {\n  animateRows: false\n};\nvar data = ((external_gflow_config_default()) === null || (external_gflow_config_default()) === void 0 ? void 0 : (external_gflow_config_default()).grid_options) || {};\nvar config = (external_gflow_config_default()) || {};\n\nvar gridOptions = (0,esm_extends.default)({}, data, options);\n\nvar initializeGrid = function initializeGrid() {\n  gridOptions.getRowNodeId = function (row) {\n    return parseInt(row.id);\n  };\n\n  instances.grid = new ag_grid_community_cjs.Grid(el.container, gridOptions);\n  var sortCol = (config === null || config === void 0 ? void 0 : config.default_sort_col) || 'none';\n  var sortDir = (config === null || config === void 0 ? void 0 : config.default_sort_dir) || 'asc';\n\n  if (sortCol === 'none') {\n    return;\n  }\n\n  var gridCol = gridOptions.columnApi.getColumn(sortCol);\n\n  if (!gridCol) {\n    return;\n  }\n\n  gridOptions.columnApi.applyColumnState({\n    state: [{\n      colId: sortCol,\n      sort: sortDir\n    }]\n  });\n};\n/**\n * @function initializeSettings\n * @description Inject the settings trigger and instantiate the flyout\n */\n\n\nvar initializeSettings = function initializeSettings() {\n  el.container.insertAdjacentHTML('afterbegin', settingToggle('inbox-settings', 'Toggle settings for this table' // todo: needs i18n\n  ));\n  instances.settingsFlyout = new Flyout({\n    content: settings(),\n    description: 'Control Inbox settings such as push notifications, update frequency and more.',\n    title: 'Inbox Settings',\n    triggers: '[data-js=\"inbox-settings\"]',\n    wrapperClasses: 'gform-flyout gform-flyout--inbox-settings'\n  });\n};\n\nvar getIdsFromModel = function getIdsFromModel() {\n  var ids = [];\n  gridOptions.api.forEachNode(function (node) {\n    return ids.push(node.data.id);\n  });\n  return ids;\n};\n\nvar refreshGrid = /*#__PURE__*/function () {\n  var _ref = (0,asyncToGenerator.default)( /*#__PURE__*/regenerator_default().mark(function _callee() {\n    var _window, _window$gflow_config;\n\n    var current_ids, formData, response, responseJson;\n    return regenerator_default().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            current_ids = getIdsFromModel();\n            formData = new window.FormData();\n            current_ids.forEach(function (item) {\n              return formData.append('current_ids[]', item);\n            });\n            formData.append('gflow_access_token', ((_window = window) === null || _window === void 0 ? void 0 : (_window$gflow_config = _window.gflow_config) === null || _window$gflow_config === void 0 ? void 0 : _window$gflow_config.current_user_token) || null);\n            _context.next = 6;\n            return window.fetch('/wp-json/gf/v2/refresh_inbox_items', {\n              method: 'post',\n              body: formData\n            });\n\n          case 6:\n            response = _context.sent;\n            _context.next = 9;\n            return response.json();\n\n          case 9:\n            responseJson = _context.sent;\n            gridOptions.api.applyTransaction(responseJson);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function refreshGrid() {\n    return _ref.apply(this, arguments);\n  };\n}();\n/**\n * @function handleSettingsChange\n * @description Handle changes to the settings for the inbox\n */\n\n\nvar handleSettingsChange = function handleSettingsChange(e) {\n  // switch based on setting name to handle cases, name is also value stored and passed in on init from php in config\n  console.log(e.delegateTarget.name);\n};\n\nvar bindEvents = function bindEvents() {\n  var refreshButton = document.querySelector('[data-js=\"refresh_inbox\"]');\n  refreshButton.addEventListener('click', function (e) {\n    e.preventDefault();\n    refreshGrid();\n  });\n  delegate_default()(instances.settingsFlyout.flyoutElement, '[data-js=\"inbox-setting\"]', 'change', handleSettingsChange);\n};\n\nvar init = function init(container) {\n  el.container = container;\n  initializeGrid();\n  initializeSettings();\n  bindEvents();\n  console.info('Gravity Flow Common: Initialized inbox component.');\n};\n\n/* harmony default export */ var inbox = (init);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ncmF2aXR5Zmxvdy8uL3NyYy9qcy90ZW1wbGF0ZXMvY29tcG9uZW50cy9mbHlvdXQuanM/OGI0NiIsIndlYnBhY2s6Ly9ncmF2aXR5Zmxvdy8uL3NyYy9qcy91dGlscy9hMTF5L2ZvY3VzLWxvb3AuanM/OWNiMiIsIndlYnBhY2s6Ly9ncmF2aXR5Zmxvdy8uL3NyYy9qcy91dGlscy9kYXRhL3VuaXF1ZS1pZC5qcz8yMGQyIiwid2VicGFjazovL2dyYXZpdHlmbG93Ly4vc3JjL2pzL2NvbW1vbi9jb21wb25lbnRzL2ZseW91dC5qcz8wNjU1Iiwid2VicGFjazovL2dyYXZpdHlmbG93Ly4vc3JjL2pzL3RlbXBsYXRlcy9jb21wb25lbnRzL2dyaWQuanM/MjY1ZSIsIndlYnBhY2s6Ly9ncmF2aXR5Zmxvdy8uL3NyYy9qcy90ZW1wbGF0ZXMvY29tcG9uZW50cy9pbnB1dC5qcz9hYzJkIiwid2VicGFjazovL2dyYXZpdHlmbG93Ly4vc3JjL2pzL3RlbXBsYXRlcy9jb21wb25lbnRzL3RvZ2dsZS5qcz83NGNkIiwid2VicGFjazovL2dyYXZpdHlmbG93Ly4vc3JjL2pzL3RlbXBsYXRlcy9jb21wb25lbnRzL2luYm94LmpzP2Q2OGEiLCJ3ZWJwYWNrOi8vZ3Jhdml0eWZsb3cvLi9zcmMvanMvY29tbW9uL2NvbXBvbmVudHMvaW5ib3guanM/YzAwNCJdLCJuYW1lcyI6WyJmbHlvdXRDb250YWluZXIiLCJpZCIsImNsb3NlQnV0dG9uQ2xhc3NlcyIsImNvbnRlbnQiLCJkZXNjcmlwdGlvbiIsImRpcmVjdGlvbiIsInBvc2l0aW9uIiwidGl0bGUiLCJ3cmFwcGVyQ2xhc3NlcyIsImZvY3VzTG9vcCIsImUiLCJ0cmlnZ2VyIiwiY29udGFpbmVyIiwib25Fc2NhcGUiLCJjb25zb2xlIiwiZXJyb3IiLCJrZXlDb2RlIiwiZm9jdXMiLCJmb2N1c2FibGUiLCJ0b29scyIsImZpcnN0Rm9jdXNhYmxlRWwiLCJsYXN0Rm9jdXNhYmxlRWwiLCJsZW5ndGgiLCJzaGlmdEtleSIsImRvY3VtZW50IiwiYWN0aXZlRWxlbWVudCIsInByZXZlbnREZWZhdWx0IiwidW5pcXVlSWQiLCJwcmVmaXgiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHIiLCJGbHlvdXQiLCJvcHRpb25zIiwiZmx5b3V0RWxlbWVudCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicmVtb3ZlIiwiYWRkIiwid2luZG93Iiwic2V0VGltZW91dCIsImFuaW1hdGlvbkRlbGF5Iiwic3RhdGUiLCJvcGVuIiwiZGV0YWlsIiwiYWN0aXZlSWQiLCJ0cmlnZ2VyRWxlbWVudCIsImNsb3NlRmx5b3V0IiwidGFyZ2V0Iiwic2hvd0ZseW91dCIsImNsb3NlRWxlbWVudCIsImluc2VydFBvc2l0aW9uIiwibG9ja0JvZHkiLCJvbkNsb3NlIiwib25PcGVuIiwicmVuZGVyT25Jbml0IiwidHJpZ2dlcnMiLCJpbml0IiwicXVlcnlTZWxlY3RvckFsbCIsImluc2VydEFkamFjZW50SFRNTCIsInRlbXBsYXRlcyIsImdldEVsZW1lbnRCeUlkIiwiaW5mbyIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVLZXlFdmVudHMiLCJmb3JFYWNoIiwiaGFuZGxlVHJpZ2dlckNsaWNrIiwibWF5YmVDbG9zZUZseW91dCIsInJlbmRlciIsImJpbmRFdmVudHMiLCJzZXR0aW5nVG9nZ2xlIiwidHJpZ2dlcklkIiwidHlwZSIsIm5hbWUiLCJ2YWx1ZSIsImNsYXNzZXMiLCJqc0F0dHJpYnV0ZSIsImNoZWNrZWQiLCJkaXNhYmxlZExhYmVsIiwiZW5hYmxlZExhYmVsIiwic2V0dGluZ3MiLCJ0b2dnbGUiLCJpbnB1dCIsImVsIiwiaW5zdGFuY2VzIiwiYW5pbWF0ZVJvd3MiLCJkYXRhIiwiZ2Zsb3dDb25maWciLCJjb25maWciLCJncmlkT3B0aW9ucyIsImluaXRpYWxpemVHcmlkIiwiZ2V0Um93Tm9kZUlkIiwicm93IiwicGFyc2VJbnQiLCJncmlkIiwiR3JpZCIsInNvcnRDb2wiLCJkZWZhdWx0X3NvcnRfY29sIiwic29ydERpciIsImRlZmF1bHRfc29ydF9kaXIiLCJncmlkQ29sIiwiY29sdW1uQXBpIiwiZ2V0Q29sdW1uIiwiYXBwbHlDb2x1bW5TdGF0ZSIsImNvbElkIiwic29ydCIsImluaXRpYWxpemVTZXR0aW5ncyIsImdyaWRUZW1wbGF0ZXMiLCJzZXR0aW5nc0ZseW91dCIsImluYm94VGVtcGxhdGVzIiwiZ2V0SWRzRnJvbU1vZGVsIiwiaWRzIiwiYXBpIiwiZm9yRWFjaE5vZGUiLCJub2RlIiwicHVzaCIsInJlZnJlc2hHcmlkIiwiY3VycmVudF9pZHMiLCJmb3JtRGF0YSIsIkZvcm1EYXRhIiwiaXRlbSIsImFwcGVuZCIsImdmbG93X2NvbmZpZyIsImN1cnJlbnRfdXNlcl90b2tlbiIsImZldGNoIiwibWV0aG9kIiwiYm9keSIsInJlc3BvbnNlIiwianNvbiIsInJlc3BvbnNlSnNvbiIsImFwcGx5VHJhbnNhY3Rpb24iLCJoYW5kbGVTZXR0aW5nc0NoYW5nZSIsImxvZyIsImRlbGVnYXRlVGFyZ2V0IiwicmVmcmVzaEJ1dHRvbiIsInF1ZXJ5U2VsZWN0b3IiLCJkZWxlZ2F0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFTyxJQUFNQSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCO0FBQUEsTUFDOUJDLEVBRDhCLHVFQUN6QixFQUR5QjtBQUFBLE1BRTlCQyxrQkFGOEIsdUVBRVQsRUFGUztBQUFBLE1BRzlCQyxPQUg4Qix1RUFHcEIsRUFIb0I7QUFBQSxNQUk5QkMsV0FKOEIsdUVBSWhCLEVBSmdCO0FBQUEsTUFLOUJDLFNBTDhCLHVFQUtsQixFQUxrQjtBQUFBLE1BTTlCQyxRQU44Qix1RUFNbkIsRUFObUI7QUFBQSxNQU85QkMsS0FQOEIsdUVBT3RCLEVBUHNCO0FBQUEsTUFROUJDLGNBUjhCLHVFQVFiLEVBUmE7QUFBQSxxQ0FXZFAsRUFYYyx3QkFXRU8sY0FYRiw0QkFXb0NILFNBWHBDLDRCQVdpRUMsUUFYakUsOENBYWxCSixr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Q3ZEQSxLQUFDLENBQUNnQixjQUFGO0FBQ0EyRixlQUFXO0FBQ1gsR0FIRDtBQUtBb0Isb0JBQVEsQ0FDUHBELFNBQVMsQ0FBQ3dCLGNBQVYsQ0FBeUIxRSxhQURsQixFQUVQLDJCQUZPLEVBR1AsUUFITyxFQUlQaUcsb0JBSk8sQ0FBUjtBQU1BLENBYkQ7O0FBZUEsSUFBTTFFLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUU5QyxTQUFGLEVBQWlCO0FBQzdCd0UsSUFBRSxDQUFDeEUsU0FBSCxHQUFlQSxTQUFmO0FBRUErRSxnQkFBYztBQUNkZ0Isb0JBQWtCO0FBQ2xCckMsWUFBVTtBQUVWeEQsU0FBTyxDQUFDaUQsSUFBUixDQUFjLG1EQUFkO0FBQ0EsQ0FSRDs7QUFVQSwwQ0FBZUwsSUFBZiIsImZpbGUiOiIuL3NyYy9qcy9jb21tb24vY29tcG9uZW50cy9pbmJveC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZ1bmN0aW9uIHNldHRpbmdUb2dnbGVcbiAqIEBkZXNjcmlwdGlvbiBUaGUgZ2VhciBpY29uIGZvciBhbiBhZyBncmlkIGluc3RhbmNlIHRoYXQgd2lsbCB0cmlnZ2VyIHRoZSBzZXR0aW5ncyBmbHlvdXRcbiAqL1xuXG5leHBvcnQgY29uc3QgZmx5b3V0Q29udGFpbmVyID0gKFxuXHRpZCA9ICcnLFxuXHRjbG9zZUJ1dHRvbkNsYXNzZXMgPSAnJyxcblx0Y29udGVudCA9ICcnLFxuXHRkZXNjcmlwdGlvbiA9ICcnLFxuXHRkaXJlY3Rpb24gPSAnJyxcblx0cG9zaXRpb24gPSAnJyxcblx0dGl0bGUgPSAnJyxcblx0d3JhcHBlckNsYXNzZXMgPSAnJ1xuKSA9PlxuXHRgXG5cdDxhcnRpY2xlIGlkPVwiJHsgaWQgfVwiIGNsYXNzPVwiJHsgd3JhcHBlckNsYXNzZXMgfSBnZm9ybS1mbHlvdXQtLSR7IGRpcmVjdGlvbiB9IGdmb3JtLWZseW91dC0tJHsgcG9zaXRpb24gfVwiPlxuXHRcdDxidXR0b24gXG5cdFx0XHRjbGFzcz1cIiR7IGNsb3NlQnV0dG9uQ2xhc3NlcyB9IGdmb3JtLWJ1dHRvbiBnZm9ybS1idXR0b24tLXNlY29uZGFyeSBnZm9ybS1idXR0b24tLWNpcmN1bGFyIGdmb3JtLWJ1dHRvbi0tc2l6ZS14c1wiXG5cdFx0XHRkYXRhLWpzPVwiZ2Zvcm0tZmx5b3V0LWNsb3NlXCIgXG5cdFx0XHR0aXRsZT1cIkNsb3NlIHRoaXMgZmx5b3V0XCJcblx0XHQ+XG5cdFx0XHQ8aSBjbGFzcz1cImdmb3JtLWJ1dHRvbl9faWNvbiBnZmxvdy1pY29uIGdmbG93LWljb24tLWRlbGV0ZVwiPjwvaT5cblx0XHQ8L2J1dHRvbj5cblx0XHQkeyB0aXRsZSB8fCBkZXNjcmlwdGlvbiA/ICc8aGVhZGVyIGNsYXNzPVwiZ2Zvcm0tZmx5b3V0X19oZWFkXCI+JyA6ICcnIH1cblx0XHQkeyB0aXRsZSA/IGA8ZGl2IGNsYXNzPVwiZ2Zvcm0tZmx5b3V0X190aXRsZVwiPiR7IHRpdGxlIH08L2Rpdj5gIDogJycgfVxuXHRcdCR7IGRlc2NyaXB0aW9uID8gYDxkaXYgY2xhc3M9XCJnZm9ybS1mbHlvdXRfX2Rlc2NcIj4keyBkZXNjcmlwdGlvbiB9PC9kaXY+YCA6ICcnIH1cblx0XHQkeyB0aXRsZSB8fCBkZXNjcmlwdGlvbiA/ICc8L2hlYWRlcj4nIDogJycgfVxuXHRcdDxkaXYgY2xhc3M9XCJnZm9ybS1mbHlvdXRfX2JvZHlcIj4keyBjb250ZW50IH08L2Rpdj5cblx0PC9hcnRpY2xlPlxuXHRgOyAvLyB0b2RvOiBuZWVkcyBpMThuXG4iLCJpbXBvcnQgKiBhcyB0b29scyBmcm9tICd1dGlscy90b29scyc7XG5cbi8qKlxuICogQGZ1bmN0aW9uIGZvY3VzTG9vcFxuICogQGRlc2NyaXB0aW9uIExvb3AgdGhyb3VnaCBmb2N1c2FibGUgZWxzIGluc2lkZSBhIGNvbnRhaW5lci4gQm91bmQgdG8gYSBrZXlkb3duIGxpc3RlbmVyIHVzdWFsbHkuXG4gKlxuICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBlXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB0cmlnZ2VyXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBjb250YWluZXJcbiAqIEBwYXJhbSB7RnVuY3Rpb259IG9uRXNjYXBlXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZm9jdXNMb29wKFxuXHRlID0ge30sXG5cdHRyaWdnZXIgPSBudWxsLFxuXHRjb250YWluZXIgPSBudWxsLFxuXHRvbkVzY2FwZSA9ICgpID0+IHt9XG4pIHtcblx0aWYgKCAhIGNvbnRhaW5lciB8fCAhIHRyaWdnZXIgKSB7XG5cdFx0Y29uc29sZS5lcnJvcihcblx0XHRcdCdZb3UgbmVlZCB0byBwYXNzIGEgY29udGFpbmVyIGFuZCB0cmlnZ2VyIG5vZGUgdG8gZm9jdXNMb29wLidcblx0XHQpO1xuXHRcdHJldHVybjtcblx0fVxuXHQvLyBlc2Mga2V5LCByZWZvY3VzIHRoZSBzZXR0aW5ncyB0cmlnZ2VyIGluIHRoZSBlZGl0b3IgcHJldmlldyBmb3IgdGhlIGFjdGl2ZSBmaWVsZFxuXHRpZiAoIGUua2V5Q29kZSA9PT0gMjcgKSB7XG5cdFx0dHJpZ2dlci5mb2N1cygpO1xuXHRcdG9uRXNjYXBlKCk7XG5cdFx0cmV0dXJuO1xuXHR9XG5cdC8vIG5vdCB0YWIga2V5LCBleGl0XG5cdGlmICggZS5rZXlDb2RlICE9PSA5ICkge1xuXHRcdHJldHVybjtcblx0fVxuXHQvLyBnZXQgdmlzaWJsZSBmb2N1c2FibGUgaXRlbXNcblx0Y29uc3QgZm9jdXNhYmxlID0gdG9vbHMuZ2V0Rm9jdXNhYmxlKCBjb250YWluZXIgKTtcblx0Ly8gc3RvcmUgZmlyc3QgYW5kIGxhc3QgdmlzaWJsZSBpdGVtXG5cdGNvbnN0IGZpcnN0Rm9jdXNhYmxlRWwgPSBmb2N1c2FibGVbIDAgXTtcblx0Y29uc3QgbGFzdEZvY3VzYWJsZUVsID0gZm9jdXNhYmxlWyBmb2N1c2FibGUubGVuZ3RoIC0gMSBdO1xuXG5cdC8vIHNoaWZ0a2V5IHdhcyBpbnZvbHZlZCwgd2UncmUgZ29pbmcgYmFja3dhcmRzLCBmb2N1cyBsYXN0IGVsIGlmIHdlIGFyZSBsZWF2aW5nIGZpcnN0XG5cdGlmICggZS5zaGlmdEtleSApIHtcblx0XHQvKiBzaGlmdCArIHRhYiAqL1xuXHRcdGlmICggZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gZmlyc3RGb2N1c2FibGVFbCApIHtcblx0XHRcdGxhc3RGb2N1c2FibGVFbC5mb2N1cygpO1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0XHQvLyByZWd1bGFyIHRhYmJpbmcgZGlyZWN0aW9uLCBicmluZyB1cyBiYWNrIHRvIGZpcnN0IGVsIGF0IHJlYWNoaW5nIGVuZFxuXHR9IC8qIHRhYiAqLyBlbHNlIGlmICggZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA9PT0gbGFzdEZvY3VzYWJsZUVsICkge1xuXHRcdGZpcnN0Rm9jdXNhYmxlRWwuZm9jdXMoKTtcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdH1cbn1cbiIsIi8qKlxuICogQGZ1bmN0aW9uIHVuaXF1ZUlkXG4gKiBAZGVzY3JpcHRpb24gR2VuZXJhdGUgYSB1bmlxdWUgaWRcbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJlZml4XG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdW5pcXVlSWQoIHByZWZpeCA9ICdpZCcgKSB7XG5cdHJldHVybiBgJHsgcHJlZml4IH0tJHsgTWF0aC5yYW5kb20oKS50b1N0cmluZyggMzYgKS5zdWJzdHIoIDIsIDkgKSB9YDtcbn1cbiIsImltcG9ydCAqIGFzIHRlbXBsYXRlcyBmcm9tICd0ZW1wbGF0ZXMvY29tcG9uZW50cy9mbHlvdXQnO1xuaW1wb3J0ICogYXMgdG9vbHMgZnJvbSAndXRpbHMvdG9vbHMnO1xuaW1wb3J0IGZvY3VzTG9vcCBmcm9tICd1dGlscy9hMTF5L2ZvY3VzLWxvb3AnO1xuaW1wb3J0IHVuaXF1ZUlkIGZyb20gJ3V0aWxzL2RhdGEvdW5pcXVlLWlkJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmx5b3V0IHtcblx0LyoqXG5cdCAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG5cdCAqL1xuXHRjb25zdHJ1Y3Rvciggb3B0aW9ucyA9IHt9ICkge1xuXHRcdE9iamVjdC5hc3NpZ24oXG5cdFx0XHR0aGlzLFxuXHRcdFx0e1xuXHRcdFx0XHRhbmltYXRpb25EZWxheTogMjE1LCAvLyB0b3RhbCBydW50aW1lIG9mIGNsb3NlIGFuaW1hdGlvbi4gbXVzdCBiZSBzeW5jZWQgd2l0aCBjc3Ncblx0XHRcdFx0Y2xvc2VCdXR0b25DbGFzc2VzOiAnZ2Zvcm0tZmx5b3V0X19jbG9zZScsIC8vIGNsYXNzZXMgZm9yIHRoZSBjbG9zZSBidXR0b25cblx0XHRcdFx0Y29udGVudDogJycsIC8vIHRoZSBodG1sIGNvbnRlbnRcblx0XHRcdFx0ZGVzY3JpcHRpb246ICcnLCAvLyB0aGUgb3B0aW9uYWwgZGVzY3JpcHRpb24gZm9yIHRoZSBmbHlvdXRcblx0XHRcdFx0ZGlyZWN0aW9uOiAncmlnaHQnLCAvLyBkaXJlY3Rpb24gdG8gZmx5IGluIGZyb20sIGxlZnQgb3IgcmlnaHRcblx0XHRcdFx0aWQ6IHVuaXF1ZUlkKCAnZmx5b3V0JyApLCAvLyBpZCBmb3IgdGhlIGZseW91dFxuXHRcdFx0XHRpbnNlcnRQb3NpdGlvbjogJ2JlZm9yZWVuZCcsIC8vIGluc2VydCBwb3NpdGlvbiByZWxhdGl2ZSB0byB0YXJnZXRcblx0XHRcdFx0bG9ja0JvZHk6IGZhbHNlLCAvLyB3aGV0aGVyIHRvIGxvY2sgYm9keSBzY3JvbGwgd2hlbiBvcGVuXG5cdFx0XHRcdG9uQ2xvc2U6ICgpID0+IHt9LCAvLyBmdW5jdGlvbiB0byBmaXJlIHdoZW4gY2xvc2VkXG5cdFx0XHRcdG9uT3BlbjogKCkgPT4ge30sIC8vIGZ1bmN0aW9uIHRvIGZpcmUgd2hlbiBvcGVuZWRcblx0XHRcdFx0cG9zaXRpb246ICdmaXhlZCcsIC8vIGZpeGVkIG9yIGFic29sdXRlIHBvc2l0aW9uaW5nXG5cdFx0XHRcdHJlbmRlck9uSW5pdDogdHJ1ZSwgLy8gcmVuZGVyIG9uIGluaXRpYWxpemF0aW9uP1xuXHRcdFx0XHR0YXJnZXQ6ICdib2R5JywgLy8gdGhlIHNlbGVjdG9yIHRvIGFwcGVuZCB0aGUgZmx5b3V0IHRvXG5cdFx0XHRcdHRpdGxlOiAnJywgLy8gdGhlIG9wdGlvbmFsIHRpdGxlIGZvciB0aGUgZmx5b3V0XG5cdFx0XHRcdHRyaWdnZXJzOiAnW2RhdGEtanM9XCJnZm9ybS10cmlnZ2VyLWZseW91dFwiXScsIC8vIHRoZSBzZWxlY3RvcltzXSBvZiB0aGUgdHJpZ2dlciB0aGF0IHNob3dzIGl0XG5cdFx0XHRcdHdyYXBwZXJDbGFzc2VzOiAnZ2Zvcm0tZmx5b3V0JywgLy8gYWRkaXRpb25hbCBjbGFzc2VzIGZvciB0aGUgd3JhcHBlclxuXHRcdFx0fSxcblx0XHRcdG9wdGlvbnNcblx0XHQpO1xuXG5cdFx0dGhpcy5zdGF0ZSA9IHtcblx0XHRcdG9wZW46IGZhbHNlLFxuXHRcdH07XG5cblx0XHR0aGlzLmZseW91dEVsZW1lbnQgPSBudWxsO1xuXHRcdHRoaXMudHJpZ2dlckVsZW1lbnQgPSBudWxsO1xuXHRcdHRoaXMuY2xvc2VFbGVtZW50ID0gbnVsbDtcblxuXHRcdGlmICggdGhpcy5yZW5kZXJPbkluaXQgKSB7XG5cdFx0XHR0aGlzLmluaXQoKTtcblx0XHR9XG5cdH1cblxuXHRzaG93Rmx5b3V0KCkge1xuXHRcdHRoaXMuZmx5b3V0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCAnYW5pbS1pbi1yZWFkeScgKTtcblx0XHR3aW5kb3cuc2V0VGltZW91dCggKCkgPT4ge1xuXHRcdFx0dGhpcy5mbHlvdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQoICdhbmltLWluLWFjdGl2ZScgKTtcblx0XHR9LCAyNSApO1xuXHR9XG5cblx0Y2xvc2VGbHlvdXQgPSAoKSA9PiB7XG5cdFx0aWYgKCAhIHRoaXMuZmx5b3V0RWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoICdhbmltLWluLWFjdGl2ZScgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0aGlzLmZseW91dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSggJ2FuaW0taW4tcmVhZHknICk7XG5cdFx0dGhpcy5mbHlvdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoICdhbmltLWluLWFjdGl2ZScgKTtcblx0XHR0aGlzLmZseW91dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCggJ2FuaW0tb3V0LXJlYWR5JyApO1xuXG5cdFx0d2luZG93LnNldFRpbWVvdXQoICgpID0+IHtcblx0XHRcdHRoaXMuZmx5b3V0RWxlbWVudC5jbGFzc0xpc3QuYWRkKCAnYW5pbS1vdXQtYWN0aXZlJyApO1xuXHRcdH0sIDI1ICk7XG5cblx0XHR3aW5kb3cuc2V0VGltZW91dCggKCkgPT4ge1xuXHRcdFx0dGhpcy5mbHlvdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoICdhbmltLW91dC1yZWFkeScgKTtcblx0XHRcdHRoaXMuZmx5b3V0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCAnYW5pbS1vdXQtYWN0aXZlJyApO1xuXHRcdH0sIHRoaXMuYW5pbWF0aW9uRGVsYXkgKTtcblxuXHRcdHRoaXMuc3RhdGUub3BlbiA9IGZhbHNlO1xuXHR9O1xuXG5cdG1heWJlQ2xvc2VGbHlvdXQgPSAoIGUgKSA9PiB7XG5cdFx0aWYgKCBlLmRldGFpbD8uYWN0aXZlSWQgPT09IHRoaXMuaWQgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dGhpcy5mbHlvdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoICdhbmltLWluLXJlYWR5JyApO1xuXHRcdHRoaXMuZmx5b3V0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCAnYW5pbS1pbi1hY3RpdmUnICk7XG5cdFx0dGhpcy5mbHlvdXRFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoICdhbmltLW91dC1yZWFkeScgKTtcblx0XHR0aGlzLmZseW91dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSggJ2FuaW0tb3V0LWFjdGl2ZScgKTtcblx0XHR0aGlzLnN0YXRlLm9wZW4gPSBmYWxzZTtcblx0fTtcblxuXHRoYW5kbGVLZXlFdmVudHMgPSAoIGUgKSA9PlxuXHRcdGZvY3VzTG9vcChcblx0XHRcdGUsXG5cdFx0XHR0aGlzLnRyaWdnZXJFbGVtZW50LFxuXHRcdFx0dGhpcy5mbHlvdXRFbGVtZW50LFxuXHRcdFx0dGhpcy5jbG9zZUZseW91dFxuXHRcdCk7XG5cblx0aGFuZGxlVHJpZ2dlckNsaWNrID0gKCBlICkgPT4ge1xuXHRcdHRoaXMudHJpZ2dlckVsZW1lbnQgPSBlLnRhcmdldDtcblx0XHRpZiAoIHRoaXMuc3RhdGUub3BlbiApIHtcblx0XHRcdHRoaXMuY2xvc2VGbHlvdXQoKTtcblx0XHRcdHRoaXMudHJpZ2dlckVsZW1lbnQuZm9jdXMoKTtcblx0XHRcdHRoaXMuc3RhdGUub3BlbiA9IGZhbHNlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLnNob3dGbHlvdXQoKTtcblx0XHRcdHRoaXMuY2xvc2VFbGVtZW50LmZvY3VzKCk7XG5cdFx0XHR0aGlzLnN0YXRlLm9wZW4gPSB0cnVlO1xuXHRcdH1cblx0fTtcblxuXHRyZW5kZXIoKSB7XG5cdFx0Y29uc3QgdGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCggdGhpcy50YXJnZXQgKVsgMCBdO1xuXHRcdGlmICggISB0YXJnZXQgKSB7XG5cdFx0XHRjb25zb2xlLmVycm9yKFxuXHRcdFx0XHRgRmx5b3V0IGNvdWxkIG5vdCByZW5kZXIgYXMgJHsgdGhpcy50YXJnZXQgfSBjb3VsZCBub3QgYmUgZm91bmQuYFxuXHRcdFx0KTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR0YXJnZXQuaW5zZXJ0QWRqYWNlbnRIVE1MKFxuXHRcdFx0dGhpcy5pbnNlcnRQb3NpdGlvbixcblx0XHRcdHRlbXBsYXRlcy5mbHlvdXRDb250YWluZXIoXG5cdFx0XHRcdHRoaXMuaWQsXG5cdFx0XHRcdHRoaXMuY2xvc2VCdXR0b25DbGFzc2VzLFxuXHRcdFx0XHR0aGlzLmNvbnRlbnQsXG5cdFx0XHRcdHRoaXMuZGVzY3JpcHRpb24sXG5cdFx0XHRcdHRoaXMuZGlyZWN0aW9uLFxuXHRcdFx0XHR0aGlzLnBvc2l0aW9uLFxuXHRcdFx0XHR0aGlzLnRpdGxlLFxuXHRcdFx0XHR0aGlzLndyYXBwZXJDbGFzc2VzXG5cdFx0XHQpXG5cdFx0KTtcblxuXHRcdHRoaXMuZmx5b3V0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCB0aGlzLmlkICk7XG5cdFx0dGhpcy5jbG9zZUVsZW1lbnQgPSB0b29scy5nZXROb2Rlcyhcblx0XHRcdCdnZm9ybS1mbHlvdXQtY2xvc2UnLFxuXHRcdFx0ZmFsc2UsXG5cdFx0XHR0aGlzLmZseW91dEVsZW1lbnRcblx0XHQpWyAwIF07XG5cblx0XHRjb25zb2xlLmluZm8oXG5cdFx0XHRgR3Jhdml0eSBGbG93IENvbW1vbjogSW5pdGlhbGl6ZWQgZmx5b3V0IGNvbXBvbmVudCBvbiAkeyB0aGlzLnRhcmdldCB9LmBcblx0XHQpO1xuXHR9XG5cblx0YmluZEV2ZW50cygpIHtcblx0XHR0aGlzLmZseW91dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggJ2tleWRvd24nLCB0aGlzLmhhbmRsZUtleUV2ZW50cyApO1xuXHRcdHRoaXMuY2xvc2VFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoICdjbGljaycsIHRoaXMuY2xvc2VGbHlvdXQgKTtcblx0XHR0b29sc1xuXHRcdFx0LmdldE5vZGVzKCB0aGlzLnRyaWdnZXJzLCB0cnVlLCBkb2N1bWVudCwgdHJ1ZSApXG5cdFx0XHQuZm9yRWFjaCggKCB0cmlnZ2VyICkgPT5cblx0XHRcdFx0dHJpZ2dlci5hZGRFdmVudExpc3RlbmVyKCAnY2xpY2snLCB0aGlzLmhhbmRsZVRyaWdnZXJDbGljayApXG5cdFx0XHQpO1xuXG5cdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcblx0XHRcdCdnZm9ybS9jbG9zZS1mbHlvdXRzJyxcblx0XHRcdHRoaXMubWF5YmVDbG9zZUZseW91dFxuXHRcdCk7XG5cdH1cblxuXHRpbml0KCkge1xuXHRcdHRoaXMucmVuZGVyKCk7XG5cdFx0dGhpcy5iaW5kRXZlbnRzKCk7XG5cdH1cbn1cbiIsIi8qKlxuICogQGZ1bmN0aW9uIHNldHRpbmdUb2dnbGVcbiAqIEBkZXNjcmlwdGlvbiBUaGUgZ2VhciBpY29uIGZvciBhbiBhZyBncmlkIGluc3RhbmNlIHRoYXQgd2lsbCB0cmlnZ2VyIHRoZSBzZXR0aW5ncyBmbHlvdXRcbiAqL1xuXG5leHBvcnQgY29uc3Qgc2V0dGluZ1RvZ2dsZSA9ICggdHJpZ2dlcklkID0gJ2dyaWQtc2V0dGluZ3MnLCB0aXRsZSA9ICcnICkgPT5cblx0YFxuXHQ8YnV0dG9uIFxuXHRcdGNsYXNzPVwiZ2Zsb3ctZ3JpZF9fYnV0dG9uIGdmbG93LWdyaWRfX2J1dHRvbi0tc2V0dGluZ3MgZ2Zsb3ctaWNvbiBnZmxvdy1pY29uLS1jb2dcIiBcblx0XHRkYXRhLWpzPVwiJHsgdHJpZ2dlcklkIH1cIiBcblx0XHR0aXRsZT1cIiR7IHRpdGxlIH1cIlxuXHQ+PC9idXR0b24+XG5cdGA7XG4iLCIvKipcbiAqIElucHV0IHRlbXBsYXRlXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IHR5cGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtIHtzdHJpbmd9IGNsYXNzZXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBqc0F0dHJpYnV0ZVxuICpcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoXG5cdHR5cGUgPSAndGV4dCcsXG5cdGlkID0gJycsXG5cdG5hbWUgPSAnJyxcblx0dmFsdWUgPSAnJyxcblx0Y2xhc3NlcyA9ICdnZm9ybS1pbnB1dCcsXG5cdGpzQXR0cmlidXRlID0gJ2dmb3JtLWlucHV0J1xuKSB7XG5cdHJldHVybiBgXG5cdDxpbnB1dCBcblx0XHRjbGFzcz1cIiR7IGNsYXNzZXMgfVwiIFxuXHRcdHZhbHVlPVwiJHsgdmFsdWUgfVwiIFxuXHRcdHR5cGU9XCIkeyB0eXBlIH1cIiBcblx0XHRkYXRhLWpzPVwiJHsganNBdHRyaWJ1dGUgfVwiXG5cdFx0JHsgaWQgPyBgaWQ9JHsgaWQgfWAgOiAnJyB9XG5cdFx0JHsgbmFtZSA/IGBuYW1lPSR7IG5hbWUgfWAgOiAnJyB9XG5cdC8+XG5cdGA7XG59XG4iLCIvKipcbiAqIFRvZ2dsZSB0ZW1wbGF0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBpZFxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gY2hlY2tlZFxuICogQHBhcmFtIHtzdHJpbmd9IGRpc2FibGVkTGFiZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSBlbmFibGVkTGFiZWxcbiAqIEBwYXJhbSB7c3RyaW5nfSB3cmFwcGVyQ2xhc3Nlc1xuICogQHBhcmFtIHtzdHJpbmd9IGpzQXR0cmlidXRlXG4gKlxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChcblx0aWQgPSAnJyxcblx0bmFtZSA9ICcnLFxuXHRjaGVja2VkID0gZmFsc2UsXG5cdGRpc2FibGVkTGFiZWwgPSAnJyxcblx0ZW5hYmxlZExhYmVsID0gJycsXG5cdHdyYXBwZXJDbGFzc2VzID0gJ2dmb3JtLWZpZWxkX190b2dnbGUnLFxuXHRqc0F0dHJpYnV0ZSA9ICdnZm9ybS10b2dnbGUnXG4pIHtcblx0cmV0dXJuIGBcblx0PGRpdiBjbGFzcz1cIiR7IHdyYXBwZXJDbGFzc2VzIH1cIj5cblx0XHQ8c3BhbiBjbGFzcz1cImdmb3JtLXNldHRpbmdzLWlucHV0X19jb250YWluZXJcIj5cblx0XHRcdDxpbnB1dCBcblx0XHRcdFx0dHlwZT1cImNoZWNrYm94XCIgXG5cdFx0XHRcdGNsYXNzPVwiZ2Zvcm0tZmllbGRfX3RvZ2dsZS1pbnB1dFwiIFxuXHRcdFx0XHRkYXRhLWpzPVwiJHsganNBdHRyaWJ1dGUgfVwiIFxuXHRcdFx0XHQkeyBpZCA/IGBpZD0keyBpZCB9YCA6ICcnIH1cblx0XHRcdFx0JHsgbmFtZSA/IGBuYW1lPSR7IG5hbWUgfWAgOiAnJyB9XG5cdFx0XHRcdCR7IGNoZWNrZWQgPyAnY2hlY2tlZCcgOiAnJyB9XG5cdFx0XHQ+XG5cdFx0XHQ8bGFiZWwgY2xhc3M9XCJnZm9ybS1maWVsZF9fdG9nZ2xlLWNvbnRhaW5lclwiICR7IGlkID8gYGZvcj0keyBpZCB9YCA6ICcnIH0+XG5cdFx0XHRcdDxzcGFuIFxuXHRcdFx0XHRcdGNsYXNzPVwiZ2Zvcm0tZmllbGRfX3RvZ2dsZS1zd2l0Y2gtdGV4dCBzY3JlZW4tcmVhZGVyLXRleHRcIlxuXHRcdFx0XHRcdGRhdGEtZGlzYWJsZWQtdGV4dD1cIiR7IGRpc2FibGVkTGFiZWwgfVwiXG5cdFx0XHRcdFx0ZGF0YS1lbmFibGVkLXRleHQ9XCIkeyBlbmFibGVkTGFiZWwgfVwiXG5cdFx0XHRcdD4keyBjaGVja2VkID8gZW5hYmxlZExhYmVsIDogZGlzYWJsZWRMYWJlbCB9PC9zcGFuPlxuXHRcdFx0XHQ8c3BhbiBjbGFzcz1cImdmb3JtLWZpZWxkX190b2dnbGUtc3dpdGNoXCI+PC9zcGFuPlxuXHRcdFx0PC9sYWJlbD5cblx0XHQ8L3NwYW4+XG5cdDwvZGl2PlxuXHRgO1xufVxuIiwiaW1wb3J0IGlucHV0IGZyb20gJ3RlbXBsYXRlcy9jb21wb25lbnRzL2lucHV0JztcbmltcG9ydCB0b2dnbGUgZnJvbSAndGVtcGxhdGVzL2NvbXBvbmVudHMvdG9nZ2xlJztcblxuLyoqXG4gKiBAZnVuY3Rpb24gc2V0dGluZ3NcbiAqIEBkZXNjcmlwdGlvbiBUaGUgY29udGVudCBmb3IgdGhlIGluYm94IHNldHRpbmdzIGZseW91dFxuICovXG5cbmV4cG9ydCBjb25zdCBzZXR0aW5ncyA9ICgpID0+XG5cdGBcblx0PHNwYW4gY2xhc3M9XCJnZm9ybS1mbHlvdXRfX3NldHRpbmctbGFiZWxcIj5cblx0XHRFbmFibGUgTGl2ZSBSZWZyZXNoXG5cdDwvc3Bhbj5cblx0PHNwYW4gY2xhc3M9XCJnZm9ybS1mbHlvdXRfX3NldHRpbmctZGVzY1wiPlxuXHRcdFRoaXMgc2V0dGluZyBlbmFibGVzIGNoZWNraW5nIHRoZSBzZXJ2ZXIgZm9yIG5ldyBpbmJveCBlbnRyaWVzIG9uIGEgY29uZmlndXJhYmxlIGZyZXF1ZW5jeS5cblx0PC9zcGFuPlxuXHQkeyB0b2dnbGUoXG5cdFx0J2luYm94LXNldHRpbmctcG9sbGluZy1lbmFibGVkJyxcblx0XHQnaW5ib3gtc2V0dGluZy1wb2xsaW5nLWVuYWJsZWQnLFxuXHRcdHRydWUsXG5cdFx0J2Rpc2FibGVkJyxcblx0XHQnZW5hYmxlZCcsXG5cdFx0J2dmb3JtLWZpZWxkX190b2dnbGUgZ2Zvcm0tZmx5b3V0X19zZXR0aW5nJyxcblx0XHQnaW5ib3gtc2V0dGluZydcblx0KSB9XG5cdFxuXHQ8bGFiZWwgY2xhc3M9XCJnZm9ybS1mbHlvdXRfX3NldHRpbmctbGFiZWxcIiBmb3I9XCJnZm9ybS1pbmJveC1zZXR0aW5nLXBvbGxpbmctZnJlcXVlbmN5XCI+XG5cdFx0UmVmcmVzaCBGcmVxdWVuY3lcblx0PC9sYWJlbD5cblx0PHNwYW4gY2xhc3M9XCJnZm9ybS1mbHlvdXRfX3NldHRpbmctZGVzY1wiPlxuXHRcdENvbnRyb2wgdGhlIGZyZXF1ZW5jeSB3aXRoIHdoaWNoIHRoZSBzZXJ2ZXIgaXMgY2hlY2tlZCBmb3IgbmV3IGluYm94IGVudHJpZXMuIFZhbHVlIGlzIGluIHNlY29uZHMuXG5cdDwvc3Bhbj5cblx0JHsgaW5wdXQoXG5cdFx0J251bWJlcicsXG5cdFx0J2luYm94LXNldHRpbmctcG9sbGluZy1mcmVxdWVuY3knLFxuXHRcdCdpbmJveC1zZXR0aW5nLXBvbGxpbmctZnJlcXVlbmN5Jyxcblx0XHQnNjAnLFxuXHRcdCdnZm9ybS1pbnB1dCBnZm9ybS1mbHlvdXRfX3NldHRpbmcgZ2Zvcm0tZmx5b3V0X19zZXR0aW5nLS1wb2xsLWZyZXEnLFxuXHRcdCdpbmJveC1zZXR0aW5nJ1xuXHQpIH1cblx0XG5cdDxzcGFuIGNsYXNzPVwiZ2Zvcm0tZmx5b3V0X19zZXR0aW5nLWxhYmVsXCI+XG5cdFx0RW5hYmxlIFB1c2ggTm90aWZpY2F0aW9uc1xuXHQ8L3NwYW4+XG5cdDxzcGFuIGNsYXNzPVwiZ2Zvcm0tZmx5b3V0X19zZXR0aW5nLWRlc2NcIj5cblx0XHRZb3Ugd2lsbCBoYXZlIHRvIGFsbG93IHB1c2ggbm90aWZpY2F0aW9ucyBmb3IgdGhpcyBkb21haW4gYW5kIGJyb3dzZXIgdG8gZW5hYmxlIHRoaXMgZmVhdHVyZS4gSWYgeW91IGhhdmVuJ3QgYWxyZWFkeSxcblx0XHR5b3VyIGJyb3dzZXIgd2lsbCBhc2sgeW91IHRvIGVuYWJsZSB0aGVtIG9uZSB0aW1lLlxuXHQ8L3NwYW4+XG5cdCR7IHRvZ2dsZShcblx0XHQnaW5ib3gtc2V0dGluZy1wdXNoLW5vdGlmaWNhdGlvbnMnLFxuXHRcdCdpbmJveC1zZXR0aW5nLXB1c2gtbm90aWZpY2F0aW9ucycsXG5cdFx0ZmFsc2UsXG5cdFx0J2Rpc2FibGVkJyxcblx0XHQnZW5hYmxlZCcsXG5cdFx0J2dmb3JtLWZpZWxkX190b2dnbGUgZ2Zvcm0tZmx5b3V0X19zZXR0aW5nJyxcblx0XHQnaW5ib3gtc2V0dGluZydcblx0KSB9XG5cdGA7XG4iLCIvKipcbiAqIEluYm94XG4gKlxuICogSW5pdGlhbGl6ZXMgdGhlIGluYm94IGNvbXBvbmVudFxuICovXG5cbmltcG9ydCB7IEdyaWQgfSBmcm9tICdhZy1ncmlkLWNvbW11bml0eSc7XG5pbXBvcnQgZGVsZWdhdGUgZnJvbSAnZGVsZWdhdGUnO1xuaW1wb3J0IGdmbG93Q29uZmlnIGZyb20gJ2dmbG93LWNvbmZpZyc7XG5cbmltcG9ydCBGbHlvdXQgZnJvbSAnLi9mbHlvdXQnO1xuaW1wb3J0ICogYXMgZ3JpZFRlbXBsYXRlcyBmcm9tICd0ZW1wbGF0ZXMvY29tcG9uZW50cy9ncmlkJztcbmltcG9ydCAqIGFzIGluYm94VGVtcGxhdGVzIGZyb20gJ3RlbXBsYXRlcy9jb21wb25lbnRzL2luYm94JztcblxuY29uc3QgZWwgPSB7fTtcbmNvbnN0IGluc3RhbmNlcyA9IHt9O1xuY29uc3Qgb3B0aW9ucyA9IHtcblx0YW5pbWF0ZVJvd3M6IGZhbHNlLFxufTtcbmNvbnN0IGRhdGEgPSBnZmxvd0NvbmZpZz8uZ3JpZF9vcHRpb25zIHx8IHt9O1xuY29uc3QgY29uZmlnID0gZ2Zsb3dDb25maWcgfHwge307XG5jb25zdCBncmlkT3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oIHt9LCBkYXRhLCBvcHRpb25zICk7XG5cbmNvbnN0IGluaXRpYWxpemVHcmlkID0gKCkgPT4ge1xuXHRncmlkT3B0aW9ucy5nZXRSb3dOb2RlSWQgPSAoIHJvdyApID0+IHtcblx0XHRyZXR1cm4gcGFyc2VJbnQoIHJvdy5pZCApO1xuXHR9O1xuXG5cdGluc3RhbmNlcy5ncmlkID0gbmV3IEdyaWQoIGVsLmNvbnRhaW5lciwgZ3JpZE9wdGlvbnMgKTtcblxuXHRjb25zdCBzb3J0Q29sID0gY29uZmlnPy5kZWZhdWx0X3NvcnRfY29sIHx8ICdub25lJztcblx0Y29uc3Qgc29ydERpciA9IGNvbmZpZz8uZGVmYXVsdF9zb3J0X2RpciB8fCAnYXNjJztcblxuXHRpZiAoIHNvcnRDb2wgPT09ICdub25lJyApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRjb25zdCBncmlkQ29sID0gZ3JpZE9wdGlvbnMuY29sdW1uQXBpLmdldENvbHVtbiggc29ydENvbCApO1xuXG5cdGlmICggISBncmlkQ29sICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGdyaWRPcHRpb25zLmNvbHVtbkFwaS5hcHBseUNvbHVtblN0YXRlKCB7XG5cdFx0c3RhdGU6IFtcblx0XHRcdHtcblx0XHRcdFx0Y29sSWQ6IHNvcnRDb2wsXG5cdFx0XHRcdHNvcnQ6IHNvcnREaXIsXG5cdFx0XHR9LFxuXHRcdF0sXG5cdH0gKTtcbn07XG5cbi8qKlxuICogQGZ1bmN0aW9uIGluaXRpYWxpemVTZXR0aW5nc1xuICogQGRlc2NyaXB0aW9uIEluamVjdCB0aGUgc2V0dGluZ3MgdHJpZ2dlciBhbmQgaW5zdGFudGlhdGUgdGhlIGZseW91dFxuICovXG5cbmNvbnN0IGluaXRpYWxpemVTZXR0aW5ncyA9ICgpID0+IHtcblx0ZWwuY29udGFpbmVyLmluc2VydEFkamFjZW50SFRNTChcblx0XHQnYWZ0ZXJiZWdpbicsXG5cdFx0Z3JpZFRlbXBsYXRlcy5zZXR0aW5nVG9nZ2xlKFxuXHRcdFx0J2luYm94LXNldHRpbmdzJyxcblx0XHRcdCdUb2dnbGUgc2V0dGluZ3MgZm9yIHRoaXMgdGFibGUnIC8vIHRvZG86IG5lZWRzIGkxOG5cblx0XHQpXG5cdCk7XG5cdGluc3RhbmNlcy5zZXR0aW5nc0ZseW91dCA9IG5ldyBGbHlvdXQoIHtcblx0XHRjb250ZW50OiBpbmJveFRlbXBsYXRlcy5zZXR0aW5ncygpLFxuXHRcdGRlc2NyaXB0aW9uOlxuXHRcdFx0J0NvbnRyb2wgSW5ib3ggc2V0dGluZ3Mgc3VjaCBhcyBwdXNoIG5vdGlmaWNhdGlvbnMsIHVwZGF0ZSBmcmVxdWVuY3kgYW5kIG1vcmUuJyxcblx0XHR0aXRsZTogJ0luYm94IFNldHRpbmdzJyxcblx0XHR0cmlnZ2VyczogJ1tkYXRhLWpzPVwiaW5ib3gtc2V0dGluZ3NcIl0nLFxuXHRcdHdyYXBwZXJDbGFzc2VzOiAnZ2Zvcm0tZmx5b3V0IGdmb3JtLWZseW91dC0taW5ib3gtc2V0dGluZ3MnLFxuXHR9ICk7XG59O1xuXG5jb25zdCBnZXRJZHNGcm9tTW9kZWwgPSAoKSA9PiB7XG5cdGNvbnN0IGlkcyA9IFtdO1xuXHRncmlkT3B0aW9ucy5hcGkuZm9yRWFjaE5vZGUoICggbm9kZSApID0+IGlkcy5wdXNoKCBub2RlLmRhdGEuaWQgKSApO1xuXHRyZXR1cm4gaWRzO1xufTtcblxuY29uc3QgcmVmcmVzaEdyaWQgPSBhc3luYyAoKSA9PiB7XG5cdGNvbnN0IGN1cnJlbnRfaWRzID0gZ2V0SWRzRnJvbU1vZGVsKCk7XG5cdGNvbnN0IGZvcm1EYXRhID0gbmV3IHdpbmRvdy5Gb3JtRGF0YSgpO1xuXG5cdGN1cnJlbnRfaWRzLmZvckVhY2goICggaXRlbSApID0+IGZvcm1EYXRhLmFwcGVuZCggJ2N1cnJlbnRfaWRzW10nLCBpdGVtICkgKTtcblx0Zm9ybURhdGEuYXBwZW5kKFxuXHRcdCdnZmxvd19hY2Nlc3NfdG9rZW4nLFxuXHRcdHdpbmRvdz8uZ2Zsb3dfY29uZmlnPy5jdXJyZW50X3VzZXJfdG9rZW4gfHwgbnVsbFxuXHQpO1xuXG5cdGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgd2luZG93LmZldGNoKCAnL3dwLWpzb24vZ2YvdjIvcmVmcmVzaF9pbmJveF9pdGVtcycsIHtcblx0XHRtZXRob2Q6ICdwb3N0Jyxcblx0XHRib2R5OiBmb3JtRGF0YSxcblx0fSApO1xuXG5cdGNvbnN0IHJlc3BvbnNlSnNvbiA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuXHRncmlkT3B0aW9ucy5hcGkuYXBwbHlUcmFuc2FjdGlvbiggcmVzcG9uc2VKc29uICk7XG59O1xuXG4vKipcbiAqIEBmdW5jdGlvbiBoYW5kbGVTZXR0aW5nc0NoYW5nZVxuICogQGRlc2NyaXB0aW9uIEhhbmRsZSBjaGFuZ2VzIHRvIHRoZSBzZXR0aW5ncyBmb3IgdGhlIGluYm94XG4gKi9cblxuY29uc3QgaGFuZGxlU2V0dGluZ3NDaGFuZ2UgPSAoIGUgKSA9PiB7XG5cdC8vIHN3aXRjaCBiYXNlZCBvbiBzZXR0aW5nIG5hbWUgdG8gaGFuZGxlIGNhc2VzLCBuYW1lIGlzIGFsc28gdmFsdWUgc3RvcmVkIGFuZCBwYXNzZWQgaW4gb24gaW5pdCBmcm9tIHBocCBpbiBjb25maWdcblx0Y29uc29sZS5sb2coIGUuZGVsZWdhdGVUYXJnZXQubmFtZSApO1xufTtcblxuY29uc3QgYmluZEV2ZW50cyA9ICgpID0+IHtcblx0Y29uc3QgcmVmcmVzaEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoICdbZGF0YS1qcz1cInJlZnJlc2hfaW5ib3hcIl0nICk7XG5cdHJlZnJlc2hCdXR0b24uYWRkRXZlbnRMaXN0ZW5lciggJ2NsaWNrJywgZnVuY3Rpb24gKCBlICkge1xuXHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRyZWZyZXNoR3JpZCgpO1xuXHR9ICk7XG5cblx0ZGVsZWdhdGUoXG5cdFx0aW5zdGFuY2VzLnNldHRpbmdzRmx5b3V0LmZseW91dEVsZW1lbnQsXG5cdFx0J1tkYXRhLWpzPVwiaW5ib3gtc2V0dGluZ1wiXScsXG5cdFx0J2NoYW5nZScsXG5cdFx0aGFuZGxlU2V0dGluZ3NDaGFuZ2Vcblx0KTtcbn07XG5cbmNvbnN0IGluaXQgPSAoIGNvbnRhaW5lciApID0+IHtcblx0ZWwuY29udGFpbmVyID0gY29udGFpbmVyO1xuXG5cdGluaXRpYWxpemVHcmlkKCk7XG5cdGluaXRpYWxpemVTZXR0aW5ncygpO1xuXHRiaW5kRXZlbnRzKCk7XG5cblx0Y29uc29sZS5pbmZvKCAnR3Jhdml0eSBGbG93IENvbW1vbjogSW5pdGlhbGl6ZWQgaW5ib3ggY29tcG9uZW50LicgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGluaXQ7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/common/components/inbox.js\n");

/***/ })

}]);